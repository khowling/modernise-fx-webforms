name: MSBuild

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Path to the solution file relative to the root of the project.
  PROJECT_NAME: "eShopLegacyWebForms"
  SOLUTION_FILE_PATH: .
  ACR_NAME: "crazk8scj7ur4lzvcryvdkv4"

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
      if: true

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.3.1
      if: true

    - name: Restore NuGet packages
      if: true
      working-directory: ${{ github.workspace }}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Build
      if: true
      working-directory: ${{ github.workspace }}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:OutDir=PUBLISH /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}
      
    - name: Docker Login
      if: true
      # You may pin to the exact commit or the version.
      # uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
      uses: docker/login-action@v2.1.0
      with:
        registry: ${{env.ACR_NAME}}.azurecr.io
        username: ${{env.ACR_NAME}}
        password: ${{ secrets.REGISTRY_PASSWORD }}
      
    - name: Build Container
      if: true
      working-directory: ${{ github.workspace }}/src/${{env.PROJECT_NAME}}
      run: docker build --build-arg source=PUBLISH/_PublishedWebsites/${{env.PROJECT_NAME}} -t ${{env.ACR_NAME}}.azurecr.io/modernise/fx-webforms:github${{ github.run_number }} .
      
    - name: Push Container
      if: true
      working-directory: ${{ github.workspace }}/src/${{env.PROJECT_NAME}}
      run: docker push ${{env.ACR_NAME}}.azurecr.io/modernise/fx-webforms:github${{ github.run_number }}
      
    - name: Install kubelogin
      if: true
      run: |
        az aks install-cli
        echo "$env:USERPROFILE\.azure-kubelogin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          
    - name: Azure login
      uses: azure/login@v1.4.6
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: Get AKS Credentials
      run: |
       az aks get-credentials --resource-group az-k8s-cj7u-rg --name aks-az-k8s-cj7u
       kubelogin convert-kubeconfig -l azurecli 
    
    - name: AKS Rolling Deploy
      if: false
      working-directory: ${{ github.workspace }}
      run: |
       kubectl apply -f .\deploy.yml 
      
    - name: Set AKS context
      if: false
      uses: azure/aks-set-context@v3
      with:
        resource-group: az-k8s-cj7u-rg 
        cluster-name: aks-az-k8s-cj7u
          
    - name: Setup kubectl
      if: false
      uses: azure/setup-kubectl@v3
        
    - name: Deploy to AKS
      if: true
      uses: Azure/k8s-deploy@v4
      with:
        namespace: 'default'
        manifests: |
           deploy.yml
        images: ${{env.ACR_NAME}}.azurecr.io/modernise/fx-webforms:github${{ github.run_number }}
        pull-images: false 
